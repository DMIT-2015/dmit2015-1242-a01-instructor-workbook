<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dmit2015</groupId>
    <artifactId>dmit2015-firebase-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>dmit2015-firebase-app</name>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>21</maven.compiler.target>
        <maven.compiler.source>21</maven.compiler.source>
        <junit.version>5.11.0</junit.version>
    </properties>

    <dependencies>
<!--        <dependency>-->
<!--            <groupId>jakarta.enterprise</groupId>-->
<!--            <artifactId>jakarta.enterprise.cdi-api</artifactId>-->
<!--            <version>4.1.0</version>-->
<!--        </dependency>-->

<!--        <dependency>-->
<!--            <groupId>jakarta.faces</groupId>-->
<!--            <artifactId>jakarta.faces-api</artifactId>-->
<!--            <version>4.1.2</version>-->
<!--        </dependency>-->


                <!-- CDI implementation for Apache Tomcat 11 -->
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-shaded</artifactId>
            <version>6.0.0.Final</version>
        </dependency>
        <!-- Microprofile Config implementation for Apache Tomcat 11 -->
        <dependency>
            <groupId>io.smallrye.config</groupId>
            <artifactId>smallrye-config</artifactId>
            <version>3.11.1</version>
        </dependency>
        <!-- Jakarta Faces implementation for Apache Tomcat 11-->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.faces</artifactId>
            <version>4.1.2</version>
        </dependency>
        <!-- Jakarta Validation for implementation for Apache Tomcat 11 -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>9.0.0.CR1</version>
        </dependency>
        <!-- Jakarta JSON Binding (JSON-B) implementation for Apache Tomcat 11 -->
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <version>3.0.4</version>
        </dependency>
        <!-- Jakarta JSON Processing (JSON-P) implementation for Apache Tomcat 11 -->
        <dependency>
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>parsson</artifactId>
            <version>1.1.7</version>
        </dependency>

        <!-- DataFaker is for creating fake data using a provider -->
        <dependency>
            <groupId>net.datafaker</groupId>
            <artifactId>datafaker</artifactId>
            <version>2.4.2</version>
        </dependency>

        <!-- Lombok is for generating getters/setters -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.36</version>
            <scope>provided</scope>
        </dependency>

        <!-- Additional tools to use with Jakarta Faces -->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>14.0.10</version>
            <classifier>jakarta</classifier>
        </dependency>
        <dependency>
            <groupId>org.webjars.npm</groupId>
            <artifactId>primeflex</artifactId>
            <version>3.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>4.6</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
            <artifactId>owasp-java-html-sanitizer</artifactId>
            <version>20240325.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish.expressly/expressly -->
<!--        <dependency>-->
<!--            <groupId>org.glassfish.expressly</groupId>-->
<!--            <artifactId>expressly</artifactId>-->
<!--            <version>5.0.0</version>-->
<!--        </dependency>-->


        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
            </plugin>

            <!-- Plugin to build a bootable JAR for WildFly -->
<!--            <plugin>-->
<!--                &lt;!&ndash; https://docs.wildfly.org/bootablejar/#wildfly_jar_dev_mode &ndash;&gt;-->
<!--                &lt;!&ndash; mvn wildfly-jar:dev-watch &ndash;&gt;-->
<!--                <groupId>org.wildfly.plugins</groupId>-->
<!--                <artifactId>wildfly-jar-maven-plugin</artifactId>-->
<!--                <version>12.0.0.Final</version>-->
<!--                <configuration>-->
<!--                    <feature-pack-location>wildfly@maven(org.jboss.universe:community-universe)#35.0.0.Final</feature-pack-location>-->
<!--                    <layers>-->
<!--                        &lt;!&ndash; https://docs.wildfly.org/35/Bootable_Guide.html#wildfly_layers &ndash;&gt;-->
<!--                        <layer>cloud-server</layer>-->
<!--                        <layer>jsf</layer>-->
<!--                        <layer>microprofile-config</layer>-->
<!--                        <layer>microprofile-rest-client</layer>-->
<!--                    </layers>-->
<!--                    <excluded-layers>-->
<!--                        <layer>deployment-scanner</layer>-->
<!--                    </excluded-layers>-->
<!--                    <plugin-options>-->
<!--                        <jboss-fork-embedded>true</jboss-fork-embedded>-->
<!--                    </plugin-options>-->
<!--                    &lt;!&ndash; https://docs.wildfly.org/bootablejar/#wildfly_jar_enabling_debug &ndash;&gt;-->
<!--                    <jvmArguments>-->
<!--                        &lt;!&ndash; https://www.jetbrains.com/help/idea/attaching-to-local-process.html#attach-to-local &ndash;&gt;-->
<!--                        &lt;!&ndash; To attach a debugger to the running server from IntelliJ IDEA-->
<!--                            1. From the main menu, choose `Run | Attach to Process`-->
<!--                            2. IntelliJ IDEA will show the list of running local processes. Select the process with the `xxx-bootable.jar` name to attach to.-->
<!--                        &ndash;&gt;-->
<!--                        <arg>-agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n</arg>-->
<!--                    </jvmArguments>-->
<!--                    <timeout>120</timeout>-->

<!--                    &lt;!&ndash; Build a bootable JAR for cloud environment. &ndash;&gt;-->
<!--                    <cloud />-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>package</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>
</project>